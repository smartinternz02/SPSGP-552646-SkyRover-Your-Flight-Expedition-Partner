{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nlet HomeComponent = class HomeComponent {\n  onRoundTripChange(event) {\n    this.roundTrip = event.target.checked;\n    console.log('Round trip value:', this.roundTrip);\n  }\n  updatePassengerName(index, event) {\n    const value = event.target.value;\n    this.passengers[index] = value;\n  }\n  checkSelectedDate() {\n    const today = new Date();\n    const selected = new Date(this.selectedDate);\n    if (selected < today) {\n      this.error = 'Please select a future date.';\n      this.selectedDate = '';\n    } else {\n      this.error = '';\n    }\n  }\n  checkReturnDate() {\n    const today = new Date(this.selectedDate);\n    const selected = new Date(this.returnDate);\n    if (selected <= today) {\n      this.error = 'Please select a future date.';\n      this.returnDate = '';\n    } else {\n      this.error = '';\n    }\n  }\n  constructor(http, modalService, route) {\n    this.http = http;\n    this.modalService = modalService;\n    this.route = route;\n    this.cardNumber = '';\n    this.expirationDate = '';\n    this.cvv = '';\n    this.availableSeats = 0;\n    this.passengers = [];\n    this.currentModal = null;\n    this.selectedMethod = '';\n    this.returnDate = '';\n    this.isLoading = false;\n    this.roundTrip = false;\n    this.error = '';\n    this.isSame = false;\n    this.totalPrice = 0;\n    this.flights = [];\n    this.flightId = '';\n    this.bookedSeats = [];\n    this.selectedSeats = [];\n    this.rows = [];\n    this.selectedFrom = '';\n    this.selectedTo = '';\n    this.selectedDate = '';\n    this.selectedFlight = '';\n    this.totalPrice = 0;\n    this.generateSeatRows();\n    const token = localStorage.getItem('adminJwtToken');\n    if (token) {\n      this.route.navigate(['/admin/dashboard']);\n      const ownerToken = localStorage.getItem('ownerToken');\n      if (ownerToken) {\n        this.route.navigate(['/owner/flights']);\n      }\n    }\n  }\n  openModal(flight, id) {\n    const token = localStorage.getItem('jwtToken');\n    if (token) {\n      this.selectedFlight = flight;\n      this.flightId = id;\n      this.modalService.open(this.modalContent, {\n        size: 'lg'\n      });\n      this.http.get(`http://localhost:5100/flights/${id}`).subscribe(res => {\n        if (res) {\n          const data = res.reservedSeats.filter(each => {\n            const eachDate = new Date(each.date);\n            const selectedDate = new Date(this.selectedDate);\n            return eachDate.getDate() === selectedDate.getDate();\n          });\n          this.bookedSeats = data.map(item => item.seat);\n        } else {\n          this.bookedSeats = [];\n        }\n      });\n    } else {\n      this.route.navigate(['/login']);\n    }\n  }\n  openPaymentModal() {\n    this.modalService.dismissAll();\n    this.modalService.open(this.paymentModal, {\n      centered: true\n    });\n  }\n  search() {\n    this.isLoading = true;\n    if (this.selectedFrom === this.selectedTo) {\n      this.isSame = true;\n    } else {\n      this.isSame = false;\n    }\n    this.http.get('http://localhost:5100/flights').subscribe(res => {\n      this.flights = res.filter(flight => flight.origin === this.selectedFrom && flight.destination === this.selectedTo);\n      this.isLoading = false;\n    });\n  }\n  generateSeatRows() {\n    const numRows = 10;\n    const seatsPerRow = 10;\n    const startingRowCharCode = 65;\n    for (let i = 0; i < numRows; i++) {\n      const rowNumber = String.fromCharCode(startingRowCharCode + i);\n      const rowSeats = [];\n      for (let j = 1; j <= seatsPerRow; j++) {\n        const seatLabel = `${rowNumber}${j}`;\n        rowSeats.push(seatLabel);\n      }\n      this.rows.push({\n        rowNumber,\n        seats: rowSeats\n      });\n    }\n  }\n  selectSeat(seatNumber, price) {\n    if (this.selectedSeats.includes(seatNumber)) {\n      this.selectedSeats = this.selectedSeats.filter(seat => seat !== seatNumber);\n    } else {\n      this.selectedSeats.push(seatNumber);\n    }\n    this.totalPrice = price * this.selectedSeats.length;\n  }\n  confirmBooking() {\n    const userId = localStorage.getItem('userId');\n    const bookingDetails = {\n      user: userId,\n      flight: this.flightId,\n      passengers: this.passengers,\n      totalPrice: this.totalPrice,\n      journeyDate: this.selectedDate,\n      returnDate: this.returnDate,\n      seatNumbers: this.selectedSeats.map(seat => ({\n        seat,\n        date: this.selectedDate\n      })),\n      paymentMethod: this.selectedMethod,\n      paymentStatus: 'success'\n    };\n    console.log(bookingDetails);\n    const response = confirm('Are you sure you want to confirm the booking?');\n    if (response) {\n      this.http.post('http://localhost:5100/bookings', bookingDetails).subscribe(res => {\n        this.currentModal = this.modalService.open(this.paymentModal, {\n          size: 'lg'\n        });\n        console.log(res);\n      });\n      if (this.currentModal) {\n        this.currentModal.dismiss();\n      }\n    }\n  }\n  onPayment() {\n    let price = this.totalPrice;\n    if (this.returnDate !== '') {\n      price = this.totalPrice * 2;\n    }\n    alert(`Payment Successful of ${price}`);\n  }\n  isFormValid() {\n    if (this.passengers.length === 0) {\n      return false;\n    }\n    return true;\n  }\n  isPaymentFormValid() {\n    return !!this.cardNumber && !!this.expirationDate && !!this.cvv;\n  }\n  isDestinationFormValid() {\n    return !!this.selectedFrom && !!this.selectedTo && !!this.selectedDate;\n  }\n};\n__decorate([ViewChild('content', {\n  static: false\n})], HomeComponent.prototype, \"modalContent\", void 0);\n__decorate([ViewChild('payment', {\n  static: false\n})], HomeComponent.prototype, \"paymentModal\", void 0);\nHomeComponent = __decorate([Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})], HomeComponent);\nexport { HomeComponent };","map":{"version":3,"names":["Component","ViewChild","HomeComponent","onRoundTripChange","event","roundTrip","target","checked","console","log","updatePassengerName","index","value","passengers","checkSelectedDate","today","Date","selected","selectedDate","error","checkReturnDate","returnDate","constructor","http","modalService","route","cardNumber","expirationDate","cvv","availableSeats","currentModal","selectedMethod","isLoading","isSame","totalPrice","flights","flightId","bookedSeats","selectedSeats","rows","selectedFrom","selectedTo","selectedFlight","generateSeatRows","token","localStorage","getItem","navigate","ownerToken","openModal","flight","id","open","modalContent","size","get","subscribe","res","data","reservedSeats","filter","each","eachDate","date","getDate","map","item","seat","openPaymentModal","dismissAll","paymentModal","centered","search","origin","destination","numRows","seatsPerRow","startingRowCharCode","i","rowNumber","String","fromCharCode","rowSeats","j","seatLabel","push","seats","selectSeat","seatNumber","price","includes","length","confirmBooking","userId","bookingDetails","user","journeyDate","seatNumbers","paymentMethod","paymentStatus","response","confirm","post","dismiss","onPayment","alert","isFormValid","isPaymentFormValid","isDestinationFormValid","__decorate","static","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\SUREKHA\\OneDrive\\Desktop\\flight-booking-main\\flight-booking-main\\client\\src\\app\\components\\home\\home.component.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Component, ViewChild, TemplateRef } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css'],\n})\nexport class HomeComponent {\n  @ViewChild('content', { static: false }) modalContent!: TemplateRef<any>; // Add \"!\" to indicate it will be initialized\n  @ViewChild('payment', { static: false }) paymentModal!: TemplateRef<any>;\n\n  cardNumber: string = '';\n  expirationDate: string = '';\n  cvv: string = '';\n\n  selectedFrom: string;\n  selectedTo: string;\n  selectedDate: string;\n  selectedFlight: string;\n  availableSeats = 0;\n  passengers: string[] = [];\n  currentModal: NgbModalRef | null = null;\n  selectedMethod: string = '';\n  returnDate: string = '';\n\n  isLoading = false;\n\n  roundTrip: boolean = false;\n\n  onRoundTripChange(event: any) {\n    this.roundTrip = event.target.checked;\n    console.log('Round trip value:', this.roundTrip);\n  }\n\n  updatePassengerName(index: number, event: any) {\n    const value: string = event.target.value;\n    this.passengers[index] = value;\n  }\n\n  error: string = '';\n\n  checkSelectedDate() {\n    const today = new Date();\n    const selected = new Date(this.selectedDate);\n    if (selected < today) {\n      this.error = 'Please select a future date.';\n      this.selectedDate = '';\n    } else {\n      this.error = '';\n    }\n  }\n\n  checkReturnDate() {\n    const today = new Date(this.selectedDate);\n    const selected = new Date(this.returnDate);\n    if (selected <= today) {\n      this.error = 'Please select a future date.';\n      this.returnDate = '';\n    } else {\n      this.error = '';\n    }\n  }\n\n  isSame = false;\n  totalPrice = 0;\n  flights: any[] = [];\n  flightId: string = '';\n  bookedSeats: any[] = [];\n\n  constructor(\n    private http: HttpClient,\n    private modalService: NgbModal,\n    private route: Router\n  ) {\n    this.selectedFrom = '';\n    this.selectedTo = '';\n    this.selectedDate = '';\n    this.selectedFlight = '';\n    this.totalPrice = 0;\n    this.generateSeatRows();\n    const token = localStorage.getItem('adminJwtToken');\n    if (token) {\n      this.route.navigate(['/admin/dashboard']);\n      const ownerToken = localStorage.getItem('ownerToken');\n      if (ownerToken) {\n        this.route.navigate(['/owner/flights']);\n      }\n    }\n  }\n\n  openModal(flight: any, id: string) {\n    const token = localStorage.getItem('jwtToken');\n    if (token) {\n      this.selectedFlight = flight;\n      this.flightId = id;\n      this.modalService.open(this.modalContent, { size: 'lg' });\n      this.http\n        .get<any[]>(`http://localhost:5100/flights/${id}`)\n        .subscribe((res: any) => {\n          if (res) {\n            const data = res.reservedSeats.filter((each: { date: string }) => {\n              const eachDate = new Date(each.date);\n              const selectedDate = new Date(this.selectedDate);\n              return eachDate.getDate() === selectedDate.getDate();\n            });\n            this.bookedSeats = data.map(\n              (item: { seat: any; date: any }) => item.seat\n            );\n          } else {\n            this.bookedSeats = [];\n          }\n        });\n    } else {\n      this.route.navigate(['/login']);\n    }\n  }\n\n  openPaymentModal() {\n    this.modalService.dismissAll();\n    this.modalService.open(this.paymentModal, { centered: true });\n  }\n\n  search(): void {\n    this.isLoading = true;\n    if (this.selectedFrom === this.selectedTo) {\n      this.isSame = true;\n    } else {\n      this.isSame = false;\n    }\n    this.http.get<any[]>('http://localhost:5100/flights').subscribe((res) => {\n      this.flights = res.filter(\n        (flight) =>\n          flight.origin === this.selectedFrom &&\n          flight.destination === this.selectedTo\n      );\n      this.isLoading = false;\n    });\n  }\n\n  selectedSeats: string[] = [];\n  rows: any[] = [];\n\n  generateSeatRows() {\n    const numRows = 10;\n    const seatsPerRow = 10;\n    const startingRowCharCode = 65;\n    for (let i = 0; i < numRows; i++) {\n      const rowNumber = String.fromCharCode(startingRowCharCode + i);\n      const rowSeats = [];\n      for (let j = 1; j <= seatsPerRow; j++) {\n        const seatLabel = `${rowNumber}${j}`;\n        rowSeats.push(seatLabel);\n      }\n      this.rows.push({ rowNumber, seats: rowSeats });\n    }\n  }\n\n  selectSeat(seatNumber: string, price: number) {\n    if (this.selectedSeats.includes(seatNumber)) {\n      this.selectedSeats = this.selectedSeats.filter(\n        (seat) => seat !== seatNumber\n      );\n    } else {\n      this.selectedSeats.push(seatNumber);\n    }\n    this.totalPrice = price * this.selectedSeats.length;\n  }\n\n  confirmBooking() {\n    const userId = localStorage.getItem('userId');\n    const bookingDetails = {\n      user: userId,\n      flight: this.flightId,\n      passengers: this.passengers,\n      totalPrice: this.totalPrice,\n      journeyDate: this.selectedDate,\n      returnDate: this.returnDate,\n      seatNumbers: this.selectedSeats.map((seat) => ({\n        seat,\n        date: this.selectedDate,\n      })),\n      paymentMethod: this.selectedMethod,\n      paymentStatus: 'success',\n    };\n    console.log(bookingDetails);\n    const response = confirm('Are you sure you want to confirm the booking?');\n    if (response) {\n      this.http\n        .post('http://localhost:5100/bookings', bookingDetails)\n        .subscribe((res) => {\n          this.currentModal = this.modalService.open(this.paymentModal, {\n            size: 'lg',\n          });\n          console.log(res);\n        });\n      if (this.currentModal) {\n        this.currentModal.dismiss();\n      }\n    }\n  }\n\n  onPayment() {\n    let price = this.totalPrice;\n    if (this.returnDate !== '') {\n      price = this.totalPrice * 2;\n    }\n    alert(`Payment Successful of ${price}`);\n  }\n\n  isFormValid(): boolean {\n    if (this.passengers.length === 0) {\n      return false;\n    }\n    return true;\n  }\n\n  isPaymentFormValid(): boolean {\n    return !!this.cardNumber && !!this.expirationDate && !!this.cvv;\n  }\n\n  isDestinationFormValid(): boolean {\n    return !!this.selectedFrom && !!this.selectedTo && !!this.selectedDate;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}